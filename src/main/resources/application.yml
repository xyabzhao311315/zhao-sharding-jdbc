# 应用服务 WEB 访问端口
server:
  port: 8080

  # 应用名称
spring:
  application:
    name: sharding-jdbc-test
  shardingsphere:
    # 是否打印sql
    props:
      sql:
        show: true
    datasource:
      # 有几个库
      names: db1,db2
      # 库1 的配置
      db1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.8.128:3306/db1?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
        username: root
        password: root
      # 库2 的配置
      db2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.8.128:3306/db2?&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
        username: root
        password: root
    sharding:
      # 默认的库
      default-data-source-name: db1
      # 绑定的表 不配置也没找出啥问题
      binding-tables: t_user
      # 配置表的分片规则
      tables:
        # 指定某个表的分片配置
        t_user:
          # 这个配置是告诉sharding有多少个库和多少个表
          actual-data-nodes: db$->{1..2}.t_user_$->{1..2}
          #分库策略
          database-strategy:
            # 行表达式模式
            inline:
              # 选择需要分库的字段，根据那个字段进行区分
              sharding-column: id
              # 表达式，分库的算法，这个是通过年龄取模然后决定落到哪个库
              algorithm-expression: db$->{id % 2 + 1}
          # 主键生成策略（如果是自动生成的，在插入数据的sql中就不要传id，null也不行，直接插入字段中就不要有主键的字段）
          key-generator: 
            # 对应的数据库表的主键
            column: id
            # 生成方式， 雪花模式
            type: SNOWFLAKE
          # 配置表分片策略
          table-strategy:
            # 行表达式
            inline:
              # 配置表分片的字段
              sharding-column: age
              # 配置表分片算法
              algorithm-expression: t_user_$->{age% 2 +1}


mybatis.configuration.map-underscore-to-camel-case: true
